/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */

import '@stencil/core';

declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLElement {
    componentOnReady?: () => Promise<this | null>;
  }

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}


declare global {

  namespace StencilComponents {
    interface LbBook {
      'looks': Object;
    }
  }

  interface HTMLLbBookElement extends StencilComponents.LbBook, HTMLStencilElement {}

  var HTMLLbBookElement: {
    prototype: HTMLLbBookElement;
    new (): HTMLLbBookElement;
  };
  interface HTMLElementTagNameMap {
    'lb-book': HTMLLbBookElement;
  }
  interface ElementTagNameMap {
    'lb-book': HTMLLbBookElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'lb-book': JSXElements.LbBookAttributes;
    }
  }
  namespace JSXElements {
    export interface LbBookAttributes extends HTMLAttributes {
      'looks'?: Object;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface LbLook {
      'look': Function;
    }
  }

  interface HTMLLbLookElement extends StencilComponents.LbLook, HTMLStencilElement {}

  var HTMLLbLookElement: {
    prototype: HTMLLbLookElement;
    new (): HTMLLbLookElement;
  };
  interface HTMLElementTagNameMap {
    'lb-look': HTMLLbLookElement;
  }
  interface ElementTagNameMap {
    'lb-look': HTMLLbLookElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'lb-look': JSXElements.LbLookAttributes;
    }
  }
  namespace JSXElements {
    export interface LbLookAttributes extends HTMLAttributes {
      'look'?: Function;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface LbRoot {

    }
  }

  interface HTMLLbRootElement extends StencilComponents.LbRoot, HTMLStencilElement {}

  var HTMLLbRootElement: {
    prototype: HTMLLbRootElement;
    new (): HTMLLbRootElement;
  };
  interface HTMLElementTagNameMap {
    'lb-root': HTMLLbRootElement;
  }
  interface ElementTagNameMap {
    'lb-root': HTMLLbRootElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'lb-root': JSXElements.LbRootAttributes;
    }
  }
  namespace JSXElements {
    export interface LbRootAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface OkButton {
      'disabled': boolean;
      'flag': string;
      'ghost': boolean;
      'label': string;
    }
  }

  interface HTMLOkButtonElement extends StencilComponents.OkButton, HTMLStencilElement {}

  var HTMLOkButtonElement: {
    prototype: HTMLOkButtonElement;
    new (): HTMLOkButtonElement;
  };
  interface HTMLElementTagNameMap {
    'ok-button': HTMLOkButtonElement;
  }
  interface ElementTagNameMap {
    'ok-button': HTMLOkButtonElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'ok-button': JSXElements.OkButtonAttributes;
    }
  }
  namespace JSXElements {
    export interface OkButtonAttributes extends HTMLAttributes {
      'disabled'?: boolean;
      'flag'?: string;
      'ghost'?: boolean;
      'label'?: string;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface OkToggle {
      'disabled': boolean;
    }
  }

  interface HTMLOkToggleElement extends StencilComponents.OkToggle, HTMLStencilElement {}

  var HTMLOkToggleElement: {
    prototype: HTMLOkToggleElement;
    new (): HTMLOkToggleElement;
  };
  interface HTMLElementTagNameMap {
    'ok-toggle': HTMLOkToggleElement;
  }
  interface ElementTagNameMap {
    'ok-toggle': HTMLOkToggleElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'ok-toggle': JSXElements.OkToggleAttributes;
    }
  }
  namespace JSXElements {
    export interface OkToggleAttributes extends HTMLAttributes {
      'disabled'?: boolean;
    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }

export declare function defineCustomElements(window: any): void;